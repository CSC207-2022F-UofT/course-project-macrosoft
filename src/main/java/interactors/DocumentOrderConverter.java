package interactors;

import database.FoodDataGateway;
import database.FoodDataMongo;
import database.MongoCollectionFetcher;
import entities.*;

import org.bson.Document;

import java.util.*;
import java.util.stream.Collectors;


public class DocumentOrderConverter {
    public static Order convertDocumentToOrder(Document document) {
        FoodDataGateway foodDataGateway = new FoodDataMongo(new MongoCollectionFetcher());
        List<OrderItem> items = document.getList("items", Document.class)
                .stream()
                .map(doc ->
                        new OrderItem(
                                doc.getObjectId("foodItemID"),
                                foodDataGateway.getFood(doc.getObjectId("foodItemID"), document.getObjectId("restaurantID")),
                                doc.getInteger("numberOfItem")))
                .collect(Collectors.toList());

        return new Order(document.getObjectId("_id"),  // ObjectId _id is auto-generated by DB for this order
                document.getDate("orderDate"),
                document.getObjectId("restaurantID"),
                document.getObjectId("userID"),
                items,
                document.getString("orderStatus"));
    }

    public static Document convertOrderToDocument(Order order) {
        List<Document> items = order.getItems().stream()
                // filter out OrderItems
                .filter(c -> c instanceof OrderItem)
                // cast each OrderItem
                .map(c -> (OrderItem) c)
                // map each OrderItem to a Document
                .map(c -> new Document("foodItemID", c.getFoodItemID()).append("numberOfItem", c.getNumberOfItem()))
                // use the toList Collector to collect all Documents in the map into a List
                .collect(Collectors.toList());

        Document doc = new Document("orderDate", order.getOrderDate())
                .append("restaurantID", order.getRestaurantID())
                .append("userID", order.getUserID())
                .append("items", items)
                .append("orderStatus", order.getOrderStatus());

        return doc;
    }
}
